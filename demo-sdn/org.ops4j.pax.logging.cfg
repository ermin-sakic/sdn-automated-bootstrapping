################################################################################
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
################################################################################

# Root logger
#log4j.rootLogger=INFO, out, ofp, ofj, async, osgi:*
log4j.rootLogger=ERROR, out, async, osgi:*
log4j.throwableRenderer=org.apache.log4j.OsgiThrowableRenderer

# CONSOLE appender not used by default
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n

# Async appender forwarding to file appender
log4j.appender.async=org.apache.log4j.AsyncAppender
log4j.appender.async.appenders=out

# File appender
log4j.appender.out=org.apache.log4j.RollingFileAppender
log4j.appender.out.layout=org.apache.log4j.PatternLayout
log4j.appender.out.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %X{bundle.id} - %X{bundle.name} - %X{bundle.version} | %m%n
log4j.appender.out.file=${karaf.data}/log/karaf.log
log4j.appender.out.append=true
log4j.appender.out.maxFileSize=15MB
log4j.appender.out.maxBackupIndex=10

# Sift appender
log4j.appender.sift=org.apache.log4j.sift.MDCSiftingAppender
log4j.appender.sift.key=bundle.name
log4j.appender.sift.default=karaf
log4j.appender.sift.appender=org.apache.log4j.FileAppender
log4j.appender.sift.appender.layout=org.apache.log4j.PatternLayout
log4j.appender.sift.appender.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %m%n
log4j.appender.sift.appender.file=${karaf.data}/log/$\\{bundle.name\\}.log
log4j.appender.sift.appender.append=true

# File appender for opneflowplugin debugging
log4j.appender.ofp=org.apache.log4j.RollingFileAppender
log4j.appender.ofp.layout=org.apache.log4j.PatternLayout
log4j.appender.ofp.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %m%n
log4j.appender.ofp.file=${karaf.data}/log/ofp.log
log4j.appender.ofp.append=true
log4j.appender.ofp.maxFileSize=15MB
log4j.appender.ofp.maxBackupIndex=10

# File appender for opneflowpluginjava debugging
log4j.appender.ofj=org.apache.log4j.RollingFileAppender
log4j.appender.ofj.layout=org.apache.log4j.PatternLayout
log4j.appender.ofj.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-16.16t | %-32.32c{1} | %m%n
log4j.appender.ofj.file=${karaf.data}/log/ofj.log
log4j.appender.ofj.append=true
log4j.appender.ofj.maxFileSize=15MB
log4j.appender.ofj.maxBackupIndex=10

# File appender for bootstrapping debugging
log4j.appender.bootstrapping=org.apache.log4j.RollingFileAppender
log4j.appender.bootstrapping.layout=org.apache.log4j.PatternLayout
log4j.appender.bootstrapping.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-32.32c{1} | %m%n
log4j.appender.bootstrapping.file=${karaf.data}/log/bootstrapping.log
log4j.appender.bootstrapping.append=true
log4j.appender.bootstrapping.maxFileSize=15MB

# File appender for ssh  debugging
log4j.appender.ssh=org.apache.log4j.RollingFileAppender
log4j.appender.ssh.layout=org.apache.log4j.PatternLayout
log4j.appender.ssh.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-32.32c{1} | %m%n
log4j.appender.ssh.file=${karaf.data}/log/ssh.log
log4j.appender.ssh.append=true
log4j.appender.ssh.maxFileSize=15MB

# File appender for dhcp  debugging
log4j.appender.dhcp=org.apache.log4j.RollingFileAppender
log4j.appender.dhcp.layout=org.apache.log4j.PatternLayout
log4j.appender.dhcp.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-32.32c{1} | %m%n
log4j.appender.dhcp.file=${karaf.data}/log/dhcp.log
log4j.appender.dhcp.append=true
log4j.appender.dhcp.maxFileSize=15MB

# File appender for iofrphase1  debugging
log4j.appender.iofrphase1=org.apache.log4j.RollingFileAppender
log4j.appender.iofrphase1.layout=org.apache.log4j.PatternLayout
log4j.appender.iofrphase1.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-32.32c{1} | %m%n
log4j.appender.iofrphase1.file=${karaf.data}/log/ofrphase1.log
log4j.appender.iofrphase1.append=true
log4j.appender.iofrphase1.maxFileSize=15MB

# File appender for iofrphase2  debugging
log4j.appender.iofrphase2=org.apache.log4j.RollingFileAppender
log4j.appender.iofrphase2.layout=org.apache.log4j.PatternLayout
log4j.appender.iofrphase2.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-32.32c{1} | %m%n
log4j.appender.iofrphase2.file=${karaf.data}/log/ofrphase2.log
log4j.appender.iofrphase2.append=true
log4j.appender.iofrphase2.maxFileSize=15MB


# File appender for swstate  debugging
log4j.appender.swstate=org.apache.log4j.RollingFileAppender
log4j.appender.swstate.layout=org.apache.log4j.PatternLayout
log4j.appender.swstate.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-32.32c{1} | %m%n
log4j.appender.swstate.file=${karaf.data}/log/swstate.log
log4j.appender.swstate.append=true
log4j.appender.swstate.maxFileSize=15MB

# File appender for ifw debugging
log4j.appender.ifw=org.apache.log4j.RollingFileAppender
log4j.appender.ifw.layout=org.apache.log4j.PatternLayout
log4j.appender.ifw.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-32.32c{1} | %m%n
log4j.appender.ifw.file=${karaf.data}/log/ifw.log
log4j.appender.ifw.append=true
log4j.appender.ifw.maxFileSize=15MB

# File appender for iofrt debugging
log4j.appender.iofrt=org.apache.log4j.RollingFileAppender
log4j.appender.iofrt.layout=org.apache.log4j.PatternLayout
log4j.appender.iofrt.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-32.32c{1} | %m%n
log4j.appender.iofrt.file=${karaf.data}/log/iofrt.log
log4j.appender.iofrt.append=true
log4j.appender.iofrt.maxFileSize=15MB

# File appender for tree debugging
log4j.appender.tree=org.apache.log4j.RollingFileAppender
log4j.appender.tree.layout=org.apache.log4j.PatternLayout
log4j.appender.tree.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-32.32c{1} | %m%n
log4j.appender.tree.file=${karaf.data}/log/tree.log
log4j.appender.tree.append=true
log4j.appender.tree.maxFileSize=15MB
log4j.appender.tree.maxBackupIndex=10

# File appender for csd debugging
log4j.appender.csd=org.apache.log4j.RollingFileAppender
log4j.appender.csd.layout=org.apache.log4j.PatternLayout
log4j.appender.csd.layout.ConversionPattern=%d{ISO8601} | %-5.5p | %-32.32c{1} | %m%n
log4j.appender.csd.file=${karaf.data}/log/csd.log
log4j.appender.csd.append=true
log4j.appender.csd.maxFileSize=15MB




################################################################################################################
# debugging openflowjava and openflowplugin
################################################################################################################
log4j.logger.org.opendaylight.openflowplugin = INFO, ofp
# trying to see does STP disable causes SwitchIdle events
#log4j.org.opendaylight.openflowplugin.impl.connection.listener.SystemNotificationsListenerImpl = TRACE, ofp
log4j.logger.org.opendaylight.openflowplugin.impl.connection = TRACE, ofp
log4j.logger.org.opendaylight.openflowplugin.applications.inventory.manager.NodeChangeCommiter = DEBUG, ofp
log4j.logger.org.opendaylight.openflowjava = ERROR, ofj
log4j.logger.org.opendaylight.openflowjava.protocol.impl.core.IdleHandler = DEBUG, ofj
################################################################################################################
# debugging ovsdb
################################################################################################################
log4j.logger.org.opendaylight.ovsdb = ERROR
################################################################################################################
# debugging bootstrapping schemes
################################################################################################################
#log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.setup.impl.utilities = DEBUG, bootstrapping
log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.dhcp.impl = TRACE, dhcp
log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.setup.impl = ERROR, bootstrapping
log4j.logger.eu.virtuwind.bootstrappingmanager.setup.impl = INFO, bootstrapping
log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.setup.impl.ConfigureNewOpenFlowNodeAuto = INFO, ssh, bootstrapping
log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.setup.impl.InitialFlowWriter = INFO, ifw, bootstrapping
log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.setup.impl.InitialOFRulesTrigger = INFO, iofrt, bootstrapping
log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.setup.impl.ControllerSelfDiscovery = INFO, csd, bootstrapping
log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.setup.impl.SwitchesStateMonitoring = INFO, swstate
log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.setup.impl.InitialOFRulesPhaseI = INFO, iofrphase1, bootstrapping
log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.setup.impl.InitialOFRulesPhaseII = INFO, iofrphase2, bootstrapping
log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.setup.impl.lldpspeaker = ERROR, bootstrapping
#log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.setup.impl.graphutilities.TreeUtils = DEBUG, bootstrapping
#log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.setup.impl.ResiliencePathManagerImpl = DEBUG, bootstrapping
#log4j.logger.org.opendaylight.openflowplugin.applications.lldpspeaker = TRACE, bootstrapping
#log4j.logger.org.opendaylight.openflowplugin.applications.topology.lldp = DEBUG, bootstrapping
log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.setup.impl.topologylldpdiscovery.LLDPDiscoveryListener = ERROR, bootstrapping
log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.setup.impl.NetworkExtensionManager = INFO, bootstrapping
log4j.logger.eu.virtuwind.bootstrappingmanager.alternative.setup.impl.graphutilities = INFO, tree
log4j.logger.eu.virtuwind.bootstrappingmanager.dhcp.impl = DEBUG, bootstrapping
log4j.logger.eu.virtuwind.bootstrappingmanager.setup.impl = INFO, bootstrapping
# Debugging OFPlugin regarding dropping PacketIns
#log4j.logger.org.opendaylight.openflowplugin.openflow.md.core.ConnectionConductorImpl = DEBUG, ofp
#log4j.logger.org.opendaylight.openflowplugin.openflow.md.core.role.OfEntityManager = DEBUG, ofp
